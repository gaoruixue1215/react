{"version":3,"sources":["Request/Request.js","ShowTime.js","index.js"],"names":["Request","Component","state","data","fetch","method","body","then","res","json","setState","result","console","log","this","map","item","index","key","album_title","author","ReactDOM","render","document","getElementById","React","createElement"],"mappings":"uPAEqBA,GCAiBC,Y,kBDClC,aAAc,IAAD,8BACT,+CACKC,MAAQ,CACTC,KAAK,IAHA,E,iFAMO,IAAD,OACfC,MAAM,sDAAsD,CAACC,OAAO,OAAOC,KAAK,eAAeC,MAAK,SAACC,GACjG,OAAOA,EAAIC,UAEdF,MAAK,SAACC,GACH,EAAKE,SAAS,CACVP,KAAKK,EAAIG,SAEbC,QAAQC,IAAIL,Q,+BAWhB,OACI,6BACI,wDACA,4BAEQM,KAAKZ,MAAMC,KAAKY,KACZ,SAACC,EAAKC,GAAN,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAKG,aACV,2BAAIH,EAAKI,kB,GAnCRnB,cEGrCoB,IAASC,OAAO,kBAAC,EAAD,MAAWC,SAASC,eAAe,SA6CzCC,IAAMC,cACZ,MACA,CAAC,GAAK,OACN,QACAD,IAAMC,cACF,KACA,CAAC,GAAK,KACN,Y","file":"static/js/main.01686ad4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\nexport default class Request extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://api.apiopen.top/musicRankingsDetails?type=1',{method:'post',body:'{name:111}'}).then((res)=>{\r\n            return res.json();\r\n        })\r\n        .then((res)=>{\r\n            this.setState({\r\n                data:res.result\r\n            })\r\n            console.log(res);\r\n        })\r\n        // Axios.get('https://api.apiopen.top/musicRankingsDetails?type=1')\r\n        //     .then((res)=>{\r\n        //         console.log(res);\r\n        //         this.setState({\r\n        //             data: res.data.result\r\n        //         })\r\n        //     })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>请求接口</h1>\r\n                <ul>\r\n                    {\r\n                        this.state.data.map(\r\n                            (item,index)=>(\r\n                                <li key={index}>\r\n                                    <h2>{item.album_title}</h2>\r\n                                    <p>{item.author}</p>\r\n                                </li>\r\n                            )\r\n                        )\r\n                    }\r\n                    \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component,Fragment} from 'react';\r\n// 类定义组件\r\nexport default class ShowTime extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            time: new Date().toLocaleString()\r\n        }\r\n        // this.handleClick = this.handleClick.bind(this);\r\n        console.log('constructor',this.props.word);\r\n    }\r\n    componentDidMount(){\r\n        console.log('componentDidMount');\r\n        setTimeout(()=>{\r\n            console.log(1)\r\n            this.setState({\r\n                time: new Date().toLocaleString()\r\n            })\r\n        },1000)\r\n    }\r\n    shouldComponentUpdate(){\r\n        return true;\r\n    }\r\n    getSnapshotBeforeUpdate(){\r\n        console.log('getsnapshot');\r\n    }\r\n    componentDidUpdate(){\r\n        console.log('didupdate');\r\n    }\r\n    handleClick = (num,e)=>{\r\n        console.log(num,e);\r\n        console.log('点击成功');\r\n    }\r\n    divClick(num,e){\r\n        console.log(num,e);\r\n    }\r\n    render(){\r\n        console.log('render');\r\n        return (\r\n            <Fragment>\r\n                <div onClick={(ev)=>{this.handleClick(1,ev)}}>\r\n                    {this.state.time}</div>\r\n                <div onClick={this.divClick.bind(this,333)}>hello{this.props.word}</div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n// 默认导出，只能导出一次\r\n// export default ShowTime;\r\n\r\n// 命名导出,可写多个export\r\n// export {ShowTime};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';import ShowTime from './ShowTime';\n//import Todolist from './Todolist/Todolist';\nimport Request from './Request/Request';\nReactDOM.render(<Request/>,document.getElementById('root'));\n// 组件交互\n// 父组件--->子组件：调用时在子组件上添加属性\n// 在子组件中通过props获取数据\n//ReactDOM.render(<Todolist/>,document.getElementById('root'));\n\n// 函数定义组件（无生命周期函数）\n// 当只是渲染结构时\n// function Todo(props){\n//     return (\n//         <div>\n//             {/* 条件渲染 */}\n//             {props.list.length>=6?<h1>todo</h1>:''}\n//             {props.list.length>=5 && <h1>todo</h1>}\n//             <ul>\n//                 {/* 循环渲染 */}\n//                 {\n//                     props.list.map(\n//                         (item,index)=> index%2 === 0&&<li key={item}>{item}</li>\n//                     )\n//                 }\n//             </ul>\n//         </div>\n//     )\n// }\n// var item = [1,2,3,4,5];\n// ReactDOM.render(<Todo list={item}/>,document.getElementById('root'));\n\n\n\n\n\n// react元素创建后不可改变\n// function tick(){\n//     var e = <div>\n//                 <p>当前时间</p>\n//                 <p>当前时间</p>\n//                 <h1>{new Date().toLocaleString()}</h1>;\n//             </div>\n//     ReactDOM.render(e,document.getElementById('root'));\n// }\n// tick();\n// setInterval(tick,1000);\n\n// jsx表达式会被react转成一个对象，类似下面声明的obj对象\nvar ele = React.createElement(\n    'div',\n    {'id':'box'},\n    'hello',\n    React.createElement(\n        'h1',\n        {'id':'h'},\n        'react'\n    )\n);\nvar obj = {\n    type: 'div',\n    props: {\n        id: 'box',\n        class: 'box',\n        children: ['hello',{\n            type: 'h1',\n            props: {\n                id: 'h',\n                class: 'h',\n                children: ['react']\n            }\n        }]\n    }\n}\n\n// 自己声明render函数，实现页面渲染\nfunction render(obj,container){\n    var {type,props} = obj;\n    // 文档碎片\n    var fr = document.createDocumentFragment();\n\n    var ele = document.createElement(type);\n    for(var item in props){\n        if(item === 'class'){\n            ele.className = props[item];\n        }else if(item === 'children'){\n            for(var i=0;i<props[item].length;i++){\n                if(typeof props[item][i] === 'object'){\n                    render(props[item][i],ele);\n                }else{\n                    var txt = document.createTextNode(props[item][i]);\n                    ele.appendChild(txt);\n                }\n            }\n        }else{\n            ele[item] = props[item];\n        }\n    }\n    fr.appendChild(ele);\n    container.appendChild(fr);\n}\n// render(obj,document.getElementById('root'));\n\n// 注意以下性能问题及优化方法\n\n// 加载html文件、浏览器解析html生成DOM树\n// link加载css文件、解析css规则、和DOM树结合生成render tree、浏览器渲染引擎渲染render tree\n\n// 页面回流（重排）：内容改变、大小改变、结构改变\n// 页面重绘：把字体颜色、背景颜色等样式改变\n\n// 1、node.offsetLeft、node.offsetWidth等慎用\n// var root = document.getElementById('root');\n// var width = root.offsetWidth;\n// setInterval(function(){\n//     width += 1\n//     root.style.width = width + 'px';\n// },100)\n\n// display、width、height、font-size等会引起页面回流\n// document.body.style.width = '100px';\n// document.body.style.height = '100px';\n// 2、声明一个css的一个类\n// .change{\n//     width: 100px;\n//     height: 100px;\n// }\n// document.body.className = 'change';\n\n// 3、对节点的操作先用变量代替\n// console.time('a');\n// var str = '';\n// for(var i=0;i<1000;i++){\n//     str += '<li>'+i+'</li>';\n// }\n// document.body.innerHTML = str;\n// console.timeEnd('a');\n// 4、文档碎片的概念"],"sourceRoot":""}